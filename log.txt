2022/02/01
    1.
        1. 成功利用 CodeMirror 前端插件 達成 代碼編輯器功能
        2. 完成題目頁面前端設計 (Figma、HTML、CSS)



2022/02/02
    1. 
        1. 上傳進度至Github以利後續版本管控
        2. 製作前端 代碼編輯器 / 題目敘述 介面編排 (HTML、CSS)



2022/02/03
    1. 
        1. 新增 CSS全域 => word-spacing: 1px
        2. 製作 代碼註解移除函式 (因為註解再傳輸過程中會導致代碼缺失，且對程式碼執行結果並無影響)
        3. 完成 測試執行 前後端互動
        4. 以 tracemalloc模組 紀錄代碼執行的 記憶體使用量
        5. 完成 problem_1/problem_2 Judge
        6. 完成 problem_1/problem_2 題目敘述
        7. 完成後端題目數據接頭



2022/02/04
    1. 
        1. 完成編輯器設定 (字體大小、染色主題、快捷鍵組合)
        2. 完成 題目數據 前後端互動
        3. 完成前端 inner-content 捲動提示CSS動畫特效



2022/02/05
    1. 
        1. inner-content CSS代碼整理 (將 description / discuss / submissions 各自分裝)
        2. 完成 提交解答 前端API接頭

    2. 
        1. 以 problem_1 測試 自製Judge 成功




2022/02/06
    1. 
        1. 完成前端使用者登入與註冊
        2. 完成前端使用者提交紀錄



2022/02/07
    1. 
        1. 完成 提交解答 前後端互動
        2. 完成載入使用者過去提交紀錄 (因為記憶體容量問題暫定為儲存最近10次提交結果) 
        3. 編排使用者數據儲存格式
        4. 製作 problem_1 題目測試資料
        5. 修復 提交時間 記錄錯誤問題

    2. 
        1. 新增儲存 使用者編輯器設定 (字體大小、染色主題、快捷鍵組合)

    3. 
        1. 重新編排檔案結構 (problem_id -> eval.json, problem.json, judge.py)
        2. 贅碼清理 (巢狀if 等. . .
        3. 更新登入後自動載入使用者編輯器設定



2022/02/08
    1. 
        1. 修正無窮迴圈會卡死系統的問題



2022/02/09
    1. 
        1. 優化頁面載入過程
        2. 修改題目頁面title textContent
        3. 修改取得 QUESTION 的 id 儲存位置

    2. 
        1. 完成前端使用者選單 (已登入 與 未登入)
        2. 後端代碼優化以避免 Args 資料缺失導致 Error
        3. 完成使用者登出

    3. 
        1. 修改使用者數據格式 (新增布林值 passed 用於儲存使用者是否已經通過題目)
        2. 新增程式碼提交結果： 【SE】 (Server Error)



2022/02/10
    1. 
        1. 修改 程式碼記憶體使用量 計算方式 (除了運行記憶體使用量而外加上儲存程式碼的記憶體使用量)
        2. 修改 problem_1/problem_2 最大記憶體使用量至 15MB

    2. 
        1. 完成 問題解題討論 前端 (HTML、CSS、JavaScript)



2022/02/11
    1. 
        1. 編排 問題解題討論 儲存格式

    2. 
        1. 完成 問題解題討論 前端 (新增討論 / 載入討論)
        2. 修復 測試執行 (無窮迴圈修正 => 未定義 self.GetTimeFunction() )
        3. 更新 提交解答 => 新增回傳 user_data 以確保使用者資料即時性



2022/02/12
    1. 
        1. 完成 問題頁面 前後端
        2. 完成 首頁頁面 前後端
        3. 檔案結構整理 (CSS JS 獨立出通用檔案

    2. 
        1. 翻譯 Problem_ 1&2 題目至中文



2022/02/13
    1. 
        1. 修復 removeComment (editor.js) 無窮迴圈問題
        2. 統整 連線取得登入資料 函式 至 _onload.js
        3. 修復 連線取得登入資料 async await function
        4. 完成 問題列表 前端列表部分
        5. 完成 載入問題列表
        6. 編排 問題列表 儲存格式
        7. 問題儲存格式 新增 【嘗試人數】 與 【已通過嘗試人數】
        8. account.py 新增 get 節點 用以配合 連線取得登入資料
        9. views 新增 /problems 節點 => 問題列表



2022/02/14
    1.
        1. 完成 問題列表 列表排序 (由大到小 & 由小到大)
        2. 完成 問題列表 前端 header 部分 (search bar / filter) (HTML、CSS) (JS尚未製作)

    2. 
        1. 完成 問題列表 前端 header 部分 難度/狀態 filter (JS)

    3. 
        1. 新增 問題列表 filter 【無篩選】 選項

    4. 
        1. 完成 問題列表 前端 header 部分 搜尋Search (JS)
        2. 修復 問題頁面 討論Discuss 排序所有討論 (JS)

    5. 
        1. 完成 問題列表頁面
        2. 更新所有頁面 pageheader problem_list連結

    6. 
        1. 完成 問題頁面 上一題/下一題/隨機選題
        2. 將 problem 1/2 更名為 0001/0002



2022/02/15
    1. 
        1. 新增問題 0003, 0004, 0005
        2. 修復問題列表 AC_Rate division by 0 問題

    2.
        1. 清空所有問題數據 (參與者 / 已通過參與者 / 讚 / 倒讚)
        2. 新增問題 0006, 0007
        3. 修復 上一題/下一題 出現不存在的題目的問題
        4. 修復程式碼修整(codeProcess) 修復 Long for 調整function無窮迴圈
        5. 新增程式碼修整(codeProcess) comprehension 調整function



2022/02/16
    1. 
        1. 調整HTML <script> 位置 (調整至 body 底部)
        2. 開始製作 解題排名



2022/02/17
    1.
        1. 完成 解題排名
        2. 將 GetNow() (JS) 移至通用功能 (_onload.js)
        3. 將 participants / passed_participants 從整數改為列表 儲存使用者名稱
        4. 新增 使用者資料 passed_problems 儲存通過的問題ID以為之後使用者個人頁面做準備

    2.
        1. 將所有HTML分別製作 CR&SR 兩個版本
        2. 將後端更新為可以同時使用 CR&SR 兩個版本
        3. 將 解題排名 更新為一次載入50名用戶

    3.
        1. 修復註冊 路徑不存在 問題
        2. 重新編排 user_data 使用者名稱大小寫儲存與搜尋方式
        3. 修復 modules Handle_IP 刪除未登入的用戶IP時會出錯的問題

    4.
        1. 修復 LoginLoad is not defined (JS)
        2. 更新甘特圖